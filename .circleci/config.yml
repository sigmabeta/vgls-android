version: 2

workflows:
  version: 2
  build_analyze_deploy:
    jobs:
      - setup
      - kt-lint:
          requires:
            - setup
      - detekt:
          requires:
            - setup
      - android-lint:
          requires:
            - setup
      - screenshot-test:
          requires:
            - setup
      - build_release_apk:
          requires:
            - kt-lint
            - detekt
            - android-lint
      - publish_app_bundle:
          filters:
            branches:
              only:
                - release
                - beta
          requires:
            - build_release_apk

##################################################

jobs:
  setup:
    resource_class: medium

    docker:
      - image: cimg/android:2024.04.1

    environment:
      JVM_OPTS: -Xmx3200m

    steps:
      - restore_cache:
          keys:
            - source-v2-{{ .Branch }}-{{ .Revision }}
            - source-v2-{{ .Branch }}-
            - source-v2-
      - checkout
      - restore_cache:
          key: jars-v2-
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies --no-configuration-cache --no-daemon --max-workers=1
      - save_cache:
          key: jars-v2-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
          paths:
            - ~/.gradle
      - run:
          name: Get all Git tags
          command: git fetch --tags -f
      - save_cache:
          key: source-v2-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"


  kt-lint:
    docker:
      - image: cimg/android:2024.04.1

    environment:
      JVM_OPTS: -Xmx2048m

    steps:
      - restore_cache:
          keys:
            - source-v2-{{ .Branch }}-{{ .Revision }}
            - source-v2-{{ .Branch }}-
            - source-v2-
      - checkout
      - restore_cache:
          key: jars-v2-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - restore_cache:
          keys:
            - build-cache-ktlint-v2-
      - run:
          name: Run Ktlint
          command: ./ktlint-check.sh
      - store_artifacts:
          path: ktlint.html
          destination: ktlint-reports
      - save_cache:
          key: build-cache-ktlint-v2-{{ .Branch }}-{{ .Revision }}
          paths:
            - build-cache

  detekt:
    resource_class: medium

    docker:
      - image: cimg/android:2024.04.1

    environment:
      JVM_OPTS: -Xmx3200m

    steps:
      - restore_cache:
          keys:
            - source-v2-{{ .Branch }}-{{ .Revision }}
            - source-v2-{{ .Branch }}-
            - source-v2-
      - checkout
      - restore_cache:
          key: jars-v2-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - restore_cache:
          keys:
            - build-cache-detekt-v2-
      - run:
          name: Run Detekt checks
          command: ./gradlew detekt --no-configuration-cache --no-daemon --max-workers=2
      - save_cache:
          key: build-cache-detekt-v2-{{ .Branch }}-{{ .Revision }}
          paths:
            - build-cache

  screenshot-test:
    resource_class: large

    docker:
      - image: cimg/android:2024.04.1

    environment:
      JVM_OPTS: -Xmx512m

    steps:
      - restore_cache:
          keys:
            - source-v2-{{ .Branch }}-{{ .Revision }}
            - source-v2-{{ .Branch }}-
            - source-v2-
      - checkout
      - restore_cache:
          key: jars-v2-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - restore_cache:
          keys:
            - build-cache-screenshot-test-v2-
      - run:
          name: Run Fail-fast script
          command: ./paparazzi-build-script.sh
      - run:
          name: Compare screenshot tests
          command: ./gradlew :core:android:ui:previews:verifyPaparazziDebug --no-configuration-cache --no-daemon --max-workers=2
      - store_artifacts:
          path: core/android/ui/previews/build/paparazzi/failures/
          destination: failure-screenshots
      - save_cache:
          key: build-cache-screenshot-test-v2-{{ .Branch }}-{{ .Revision }}
          paths:
            - build-cache

  android-lint:
    resource_class: large

    docker:
      - image: cimg/android:2024.04.1

    environment:
      # Start off with a 4GB heap size; expand up to 6GB
      JVM_OPTS: -Xms4g -Xmx6g

    steps:
      - restore_cache:
          keys:
            - source-v2-{{ .Branch }}-{{ .Revision }}
            - source-v2-{{ .Branch }}-
            - source-v2-
      - checkout
      - restore_cache:
          key: jars-v2-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - restore_cache:
          keys:
            - build-cache-lint-v2-
      - run:
          name: Setup Google Services JSON
          command: echo $GOOGLE_SERVICES_JSON >> app/google-services.json
      - run:
          name: Run Android Lint checks
          command: ./gradlew :app:lintRelease --no-configuration-cache --no-daemon --max-workers=4
      - store_artifacts:
          path: app/build/reports/
          destination: reports
      - save_cache:
          key: build-cache-lint-v2-{{ .Branch }}-{{ .Revision }}
          paths:
            - build-cache

  build_release_apk:
    resource_class: large

    docker:
      - image: cimg/android:2024.04.1

    environment:
      # Start off with a 4GB heap size; expand up to 6GB
      JVM_OPTS: -Xms4g -Xmx6g

    steps:
      - restore_cache:
          keys:
            - source-v2-{{ .Branch }}-{{ .Revision }}
            - source-v2-{{ .Branch }}-
            - source-v2-
      - checkout
      - restore_cache:
          key: jars-v2-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - restore_cache:
          keys:
            - build-cache-v2-
      - run:
          name: Prepare license information Webview
          command: ./gradlew licenseReleaseReport --no-configuration-cache --no-daemon --max-workers=4
      - run:
          name: Setup Google Services JSON
          command: echo $GOOGLE_SERVICES_JSON >> app/google-services.json
      - run:
          name: Build Release
          command: ./gradlew :app:assembleRelease -PdisablePreDex --no-configuration-cache --no-daemon --max-workers=4
      - run:
          name: Rename APK
          command: ./rename-apk-release.sh
      - save_cache:
          key: build-cache-v2-{{ .Branch }}-{{ .Revision }}
          paths:
            - build-cache
      - store_artifacts:
          path: app/build/outputs/apk/release
          destination: outputs

  publish_app_bundle:
    resource_class: large

    docker:
      - image: cimg/android:2024.04.1

    environment:
      # Start off with a 4GB heap size; expand up to 6GB
      JVM_OPTS: -Xms4g -Xmx6g

    steps:
      - restore_cache:
          keys:
            - source-v2-{{ .Branch }}-{{ .Revision }}
            - source-v2-{{ .Branch }}-
            - source-v2-
      - checkout
      - restore_cache:
          key: jars-v2-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - restore_cache:
          keys:
            - build-cache-v2-
      - run:
          name: Set target Google Play Track
          command: ./set-track-name.sh
      - run:
          name: Prepare license information Webview
          command: ./gradlew licenseReleaseReport --no-configuration-cache --no-daemon --max-workers=4
      - run:
          name: Build Release Bundle
          command: ./gradlew :app:bundleRelease -PdisablePreDex --no-configuration-cache --no-daemon --max-workers=4
      - run:
          name: Publish Bundle
          command: ./gradlew :app:publishReleaseBundle --no-configuration-cache --no-daemon --max-workers=4
      - save_cache:
          key: build-cache-v2-{{ .Branch }}-{{ .Revision }}
          paths:
            - build-cache
